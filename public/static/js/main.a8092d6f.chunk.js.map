{"version":3,"sources":["helpers/fetch.js","actions/auth.js","components/ui/AddNewEvent.js","actions/modal.js","helpers/toDate.js","actions/events.js","components/ui/DeleteEvent.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","helpers/calendar-messages.js","components/calendar/CalendarModal.js","components/calendar/CalendarScreen.js","Hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AppRouter.js","Reducers/AuthReducer.js","Reducers/EventReducer.js","Reducers/ModalReducer.js","Store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","login","payload","type","logout","cleanLogout","FinishCheck","AddNewEvent","activeEvent","useSelector","state","calendar","dispatch","useDispatch","className","onClick","toDate","events","map","e","start","moment","end","eventAddNew","event","eventsLoading","eventUpdate","eventDelete","DeleteEvent","a","_id","resp","json","ok","Swal","fire","msg","console","log","Navbar","name","auth","clear","CalendarEvent","title","user","notes","startDate","format","endDate","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","add","seconds","minutes","initialState","id","clone","CalendarModal","modal","useState","value","setValue","useEffect","handleInputChange","target","isOpen","openModal","overlayClassName","closeTimeoutMS","style","background","width","display","justifyContent","position","onChange","minDate","placeholder","autoComplete","rows","preventDefault","length","isAfter","isBefore","eventStartAddNew","locale","CalendarScreen","uid","lastView","setLastView","localizer","momentLocalizer","stasrtAccessor","endAccessor","components","onDoubleClickEvent","eventPropGetter","backgroundColor","onSelectEvent","onView","setItem","view","selectable","onSelectSlot","useForm","reset","LoginScreen","email","password","handleSubmit","Date","getTime","errors","StartLogin","onSubmit","to","RegisterScreen","password1","password2","StartRegister","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PubliceRoute","AppRouter","check","reducer","combineReducers","action","eve","filter","composeEnhancers","composeWithDevTools","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a8092d6f.chunk.js","sourcesContent":["// const baseURL=process.env.REACT_APP_API_URL;\r\nconst baseURL=process.env.REACT_APP_API_URL;\r\n\r\nexport const fetchWithoutToken = (endpoint , data, method = \"GET\" ) => {\r\n    \r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if( method === \"GET\" ){\r\n        return fetch( url )\r\n    }\r\n    else \r\n    {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                \"Content-type\":\"application/json\"\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n};\r\n\r\nexport const fetchWithToken = (endpoint , data, method = \"GET\" ) => {\r\n    \r\n    const token = localStorage.getItem(\"token\");\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if( method === \"GET\" || method === \"DELETE\"){\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                \"x-token\":token\r\n            }\r\n        } )\r\n    }\r\n    else \r\n    {\r\n        return fetch( url, {\r\n            method,\r\n            headers:{\r\n                \"Content-type\":\"application/json\",\r\n                \"x-token\":token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    };\r\n};","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\";\r\n\r\nexport const StartLogin = (value) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken(\"auth\", value, \"POST\");\r\n    const body = await resp.json();\r\n    if (body.ok) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else if (body.msg) {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    } else if (body.errors.email) {\r\n      Swal.fire(\"Error\", body.errors.email.msg, \"error\");\r\n    } else if (body.errors.password) {\r\n      Swal.fire(\"Error\", body.errors.password.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const StartRegister = (value) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithoutToken(\"auth/new\", value, \"POST\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      Swal.fire(\"Excelente!\", \"Registrado con éxito\", \"success\");\r\n      localStorage.setItem(\"token\", body.token);\r\n\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else if (body.msg) {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    } else if (body.errors.email) {\r\n      Swal.fire(\"Error\", body.errors.email.msg, \"error\");\r\n    } else if (body.errors.name) {\r\n      Swal.fire(\"Error\", body.errors.name.msg, \"error\");\r\n    } else if (body.errors.password) {\r\n      Swal.fire(\"Error\", body.errors.password.msg, \"error\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const Checking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchWithToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n\r\n    if (body.ok) {\r\n      console.log(\"Se ha renovado el token.\");\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          name: body.name,\r\n        })\r\n      );\r\n    }\r\n    else\r\n    {\r\n      dispatch(FinishCheck());\r\n    }\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return async (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n    dispatch(cleanLogout());\r\n  };\r\n};\r\n\r\nconst login = (payload) => ({\r\n  type: \"Login\",\r\n  payload,\r\n});\r\n\r\nconst logout = () => ({ type: \"Logout\" });\r\nconst cleanLogout = () => ({ type: \"Logout Clean\" });\r\nconst FinishCheck = () => ({ type: \"Finish Checking\" });\r\n\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openModal } from '../../actions/modal';\r\n\r\nexport const AddNewEvent = () => {\r\n\r\n    const {activeEvent} = useSelector(state => state.calendar)\r\n    const dispatch = useDispatch();\r\n    const handleInputClick = () => {\r\n        dispatch(openModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleInputClick }\r\n        >   \r\n            {\r\n                (activeEvent)?\r\n                (<i className=\"far fa-plus\">Editar evento </i>):   \r\n                (<i className=\"far fa-plus\">Agregar nuevo evento </i>)   \r\n            }\r\n        </button>\r\n    )  \r\n}\r\n","export const openModal = () => ({ type: \"openModal\" });\r\nexport const closeModal = () => ({ type: \"closeModal\" });\r\n","import moment from \"moment\";\r\n\r\nexport const toDate = (events) => {\r\n\r\n    return events.map(e=>({\r\n        ...e,\r\n        start: moment(e.start).toDate(),\r\n        end: moment(e.end).toDate(),\r\n    }))\r\n}\r\n","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { toDate } from \"../helpers/toDate\";\r\n\r\nexport const eventStartAddNew = (event) => { \r\n    return async  (dispatch) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(\"events/\" , event, \"POST\" )\r\n            const body = await resp.json()\r\n                           \r\n            if(body.ok){\r\n\r\n                event.id = body.event._id\r\n                event.user = body.event.user\r\n                \r\n\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n};\r\nexport const eventStartLoading = () => {\r\n    return async  (dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(\"events/\" , null , \"GET\" )\r\n            const body = await resp.json()\r\n                          \r\n            if(body.ok){\r\n\r\n                const events = toDate(body.events)\r\n                dispatch(eventsLoading(events));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nexport const eventStartUpdate = (event) => {\r\n    return async  (dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(\r\n                `events/${event.id}`, \r\n                event , \r\n                \"PUT\" );\r\n            const body = await resp.json();\r\n                         \r\n            if(body.ok){\r\n                \r\n                dispatch(eventUpdate(event));\r\n            }\r\n            else\r\n            {\r\n                Swal.fire(\"Error\",body.msg,\"error\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nexport const eventStartDelete = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(\r\n                `events/${event._id}`, \r\n                null , \r\n                \"DELETE\" );\r\n            const body = await resp.json();        \r\n            if(body.ok){\r\n                dispatch(eventDelete(event));\r\n            }\r\n            else\r\n            {\r\n                Swal.fire(\"Error\",body.msg,\"error\")\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const setActiveEvent = (event) => ({\r\n    type: \"Set Active Event\",\r\n    payload: event,\r\n});\r\nexport const cleanActiveEvent = () => ({ type: \"Clean Active Event\" });\r\n\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: \"Add New Event\",\r\n    payload: event\r\n});\r\n\r\nconst eventsLoading = (events) => ({\r\n    type: \"Events Loading\",\r\n    payload: events\r\n});\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: \"Update Event\",\r\n    payload: event,\r\n});\r\n\r\nconst eventDelete = (event) => ({\r\n    type: \"Delete Event\",\r\n    payload: event,\r\n});","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cleanActiveEvent, eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEvent = () => {\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n    const dispatch = useDispatch();\r\n    const handleInputClick = () => {\r\n        dispatch(eventStartDelete(activeEvent));\r\n        dispatch(cleanActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {\r\n            (activeEvent)&&(<button\r\n                className=\"btn btn-danger fab\"\r\n                onClick={ handleInputClick }\r\n            >\r\n                <i className=\"far fa-plus\">Eliminar evento</i>   \r\n            </button>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { AddNewEvent } from \"./AddNewEvent\";\r\nimport { DeleteEvent } from \"./DeleteEvent\";\r\n\r\nexport const Navbar = () => {\r\n  const { name } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleLogout = () => {\r\n    dispatch(startLogout());\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{name}</span>\r\n      <AddNewEvent />\r\n      <DeleteEvent />\r\n\r\n      <button onClick={handleLogout} className=\"btn btn-outline-danger\">\r\n        <i className=\"fas fa-sign-out-alt\" />\r\n        <span>Salir</span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import moment from 'moment';\r\nimport React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n    const {title,user,notes,start,end} = event;\r\n    const startDate = moment(start).format(\"h:mm:ss a\")\r\n    const endDate = moment(end).format(\"h:mm:ss a\")\r\n    return (\r\n        <div>\r\n            <div>\r\n                <h3>{ title }</h3>\r\n            </div>\r\n            <div>\r\n                <h6>{ notes }</h6>\r\n            </div>\r\n            <div>\r\n                <small> -- { user.name }</small>\r\n            </div>\r\n            <div>\r\n                <small>{`${startDate}-${endDate}`}</small>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModal } from \"../../actions/modal\";\r\nimport Swal from \"sweetalert2\";\r\nimport {\r\n  cleanActiveEvent,\r\n  eventStartAddNew ,\r\n  eventStartUpdate,\r\n} from \"../../actions/events\";\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\n\r\n\r\nModal.setAppElement(\"#root\");\r\nconst now = moment().add(1, \"hours\").seconds(0).minutes(0);\r\nconst initialState = {\r\n  id:null,\r\n  title: \"\",\r\n  notes: \"\",\r\n  start: now.toDate(),\r\n  end: now.clone().add(1, \"hours\").toDate(),\r\n  user:null\r\n};\r\n\r\n\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n      const dispatch = useDispatch();\r\n      const modal = useSelector((state) => state.modal);\r\n      const calendar = useSelector((state) => state.calendar);\r\n      const { activeEvent } = calendar;\r\n      const [value, setValue] = useState(initialState);\r\n      const { title, notes, start, end, user } = value;\r\n\r\n      useEffect(() => {\r\n        if (activeEvent) {\r\n          setValue({\r\n            ...value,\r\n            id: activeEvent._id,\r\n            title: activeEvent.title,\r\n            notes: activeEvent.notes,\r\n            start: activeEvent.start,\r\n            end: activeEvent.end,\r\n            user: activeEvent.user\r\n          });\r\n        } else {\r\n          setValue(initialState);\r\n        }\r\n      }, [calendar]);\r\n\r\n      const handleInputChange = ({ target }) => {\r\n        setValue({\r\n          ...value,\r\n          [target.name]: target.value,\r\n        });\r\n      };\r\n      const changeStartDate = (e) => {\r\n        setValue({\r\n          ...value,\r\n          start: e,\r\n        });\r\n      };\r\n      const changeEndDate = (e) => {\r\n        setValue({\r\n          ...value,\r\n          end: e,\r\n        });\r\n      };\r\n\r\n      const handleInputCloseModal = () => {\r\n        dispatch(closeModal());\r\n        setValue(initialState);\r\n        dispatch(cleanActiveEvent());\r\n      };\r\n      const handleInputSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (title.length <= 2)\r\n        {\r\n            return Swal.fire(\"Error en el titulo\", \"Coloque un titulo\", \"error\");\r\n        } \r\n        else if (moment(start).isAfter(moment(end))) \r\n        {\r\n          return Swal.fire(\r\n            \"Error en la fecha\",\r\n            \"La fecha de inicio no puede estar despues que la de fin\",\r\n            \"error\"\r\n          );\r\n        } else if (moment(start).isBefore(moment())) \r\n        {\r\n          return Swal.fire(\r\n            \"Error en la fecha\",\r\n            \"La fecha de inicio no puede ser anterior a ahora\",\r\n            \"error\"\r\n          );\r\n        } else if (activeEvent) \r\n        {\r\n            dispatch(eventStartUpdate(value));\r\n        } else \r\n        {\r\n            dispatch(eventStartAddNew(value));\r\n        }\r\n        dispatch(closeModal());\r\n      };\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={modal.openModal}\r\n        // onAfterOpen={afterOpenModal}\r\n        // onRequestClose={closeModal}\r\n        className=\"modal\"\r\n        overlayClassName=\"modal-fondo\"\r\n        closeTimeoutMS={200}\r\n        style={customStyles}\r\n      >\r\n        <button \r\n        onClick={handleInputCloseModal} \r\n        className=\"btn\"\r\n        style={{ background: \"#FF3333\",\r\n                  width:\"30px\",\r\n                  display:\"flex\",\r\n                  justifyContent:\"center\",\r\n                  position:\"absolute\",\r\n                  right:\"20px\"\r\n        }}\r\n        >\r\n          X\r\n        </button>\r\n\r\n        <h1> Nuevo evento </h1>\r\n        <hr />\r\n        <form className=\"container\">\r\n          <div className=\"form-group\">\r\n            <label>Fecha y hora inicio</label>\r\n            <DateTimePicker onChange={changeStartDate} value={start} />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Fecha y hora fin</label>\r\n            <DateTimePicker\r\n              onChange={changeEndDate}\r\n              minDate={start}\r\n              value={end}\r\n            />\r\n          </div>\r\n\r\n          <hr />\r\n          <div className=\"form-group\">\r\n            <label>Titulo y notas</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Título del evento\"\r\n              name=\"title\"\r\n              autoComplete=\"off\"\r\n              onChange={handleInputChange}\r\n              value={title}\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Una descripción corta\r\n            </small>\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Notas\"\r\n              rows=\"5\"\r\n              name=\"notes\"\r\n              onChange={handleInputChange}\r\n              value={notes}\r\n            ></textarea>\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              {(user)?(`Evento creado por ${user.name}`):(\"\")}\r\n            </small>\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-outline-primary btn-block\"\r\n            onClick={handleInputSubmit}\r\n          >\r\n            <i className=\"far fa-save\"></i>\r\n            <span> Guardar</span>\r\n          </button>\r\n        </form>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","import React,{useEffect, useState} from 'react';\r\nimport {Calendar, momentLocalizer} from \"react-big-calendar\";\r\nimport moment from 'moment';\r\nimport { Navbar } from '../ui/Navbar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport \"moment/locale/es\"\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport {messages} from '../../helpers/calendar-messages';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { openModal } from '../../actions/modal';\r\nimport { cleanActiveEvent, eventStartLoading, setActiveEvent } from '../../actions/events';\r\n\r\n\r\nmoment.locale(\"es\");\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const {uid} = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const calendar = useSelector(state => state.calendar)\r\n    const [lastView, setLastView] = useState(localStorage.getItem(\"LastView\") || \"month\");\r\n    const localizer = momentLocalizer(moment);\r\n    \r\n    useEffect(() => {\r\n        dispatch(eventStartLoading())\r\n    }, [dispatch])\r\n\r\n    const onDoubleClickEvent = (e) => {\r\n        dispatch(openModal()); \r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActiveEvent(e));\r\n    }\r\n\r\n    const onView = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem(\"LastView\",e);\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(cleanActiveEvent());\r\n    }\r\n    const eventStyleGetter = (event) => {\r\n            const style = {backgroundColor:( uid === event.user.uid )? \"#196F3D\" : \"#ABB2B9\"}\r\n            return { style }\r\n        }\r\n    \r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n            <Calendar \r\n                localizer={ localizer }\r\n                events={ calendar.events }\r\n                stasrtAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={ messages }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n                onDoubleClickEvent={ onDoubleClickEvent }\r\n                eventPropGetter={ eventStyleGetter }\r\n                onSelectEvent={ onSelectEvent }\r\n                onView={ onView }\r\n                view={ lastView }\r\n                selectable={true}\r\n                onSelectSlot={onSelectSlot}\r\n            />\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [value, setValue] = useState(initialState);\r\n\r\n    const reset = () => {\r\n\r\n        setValue(initialState)\r\n\r\n    }\r\n\r\n    const handleInputChange = ({target})=>{\r\n        setValue({\r\n            ...value,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n\r\n    return [value,handleInputChange,reset];\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { StartLogin } from '../../actions/auth';\r\nimport { useForm } from '../../Hooks/useForm';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [value, handleInputChange] = useForm({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n    const {email,password} = value;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(StartLogin(value));\r\n    }\r\n\r\n    return(\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\"></div>\r\n            <div className=\"col-md-6 login-form-1\">\r\n                <h3>Ingreso</h3>\r\n                <form onSubmit={ handleSubmit }>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            type=\"text\"\r\n                            name=\"email\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Correo\"\r\n                            value={ email }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Contraseña\"\r\n                            value={ password }\r\n                            onChange={ handleInputChange }\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input \r\n                            onClick={ handleSubmit }\r\n                            type=\"submit\"\r\n                            className=\"btnSubmit\"\r\n                            value=\"Login\" \r\n                        />\r\n                    </div>\r\n                </form>\r\n                <Link\r\n                className=\"link\" \r\n                to=\"/auth/register\">\r\n                    Todavia no tiene una cuenta?\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\nimport { StartRegister } from '../../actions/auth';\r\nimport { useForm } from '../../Hooks/useForm';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [value, handleInputChange] = useForm({\r\n        email:\"\",\r\n        password1:\"\",\r\n        password2:\"\",\r\n        name:\"\"\r\n    })\r\n    const {email,password1,password2,name} = value;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(password1 !== password2){\r\n            Swal.fire(\"Error\", \"Ambas contraseñas deben coincidir\", \"error\")\r\n        }\r\n\r\n         dispatch(StartRegister({\r\n             email,\r\n             name,\r\n             password:password1\r\n         }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleSubmit } >\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                value={ name }\r\n                                name=\"name\"\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                value={ email }\r\n                                name=\"email\"\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                value={ password1 }\r\n                                name=\"password1\"\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                value={ password2 }\r\n                                name=\"password2\"\r\n                                onChange={ handleInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" \r\n                                onClick={ handleSubmit }\r\n                                />\r\n                        </div>\r\n                    </form>\r\n                    <Link\r\n                    className=\"link\" \r\n                    to=\"/auth/login\">\r\n                        Ya posee una cuenta?\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router,Route, Switch} from 'react-router-dom';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n\r\n    return (\r\n        <div className=\"auth_main\">\r\n            <div className=\"auth_conteiner\">\r\n                <Router>\r\n                    <Switch>\r\n                            <Route exact path=\"/auth/login\" component={  LoginScreen } />\r\n                            <Route exact path=\"/auth/register\" component={ RegisterScreen } />\r\n\r\n                            {/* <Redirect to=\"/auth/login\" /> */}\r\n                        </Switch>\r\n                </Router>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        \r\n        <Route {...rest}\r\n            component={(props) =>{\r\n\r\n                return (isAuthenticated)?\r\n                (<Component {...props} />):\r\n                (<Redirect to=\"/auth/login\" />)\r\n            }\r\n                \r\n        }\r\n        />\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PubliceRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n\r\n    return (\r\n        \r\n        <Route {...rest}\r\n            component={(props) =>{\r\n\r\n                return (isAuthenticated)?\r\n                (<Redirect to=\"/\" />):\r\n                (<Component {...props} />)\r\n            }\r\n                \r\n        }\r\n        />\r\n    );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router,Redirect} from 'react-router-dom';\r\nimport { Checking } from '../actions/auth';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PubliceRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {name}= useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        \r\n        dispatch(Checking());\r\n\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <Router>\r\n                    <PubliceRoute path=\"/auth\" component={ AuthRouter } isAuthenticated={ !!name } />\r\n                    <PrivateRoute exact path=\"/\" component={ CalendarScreen } isAuthenticated={ !!name }/>\r\n\r\n                    <Redirect to=\"/\" />\r\n            </Router>\r\n        </div>\r\n    )\r\n}\r\n","const initialState = {\r\n    check:true,\r\n    uid: null,\r\n    name:null\r\n}\r\n\r\n\r\nexport const AuthReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case \"Login\":\r\n            return ({\r\n                ...state,\r\n                ...action.payload,\r\n                check: false\r\n            })\r\n\r\n        case \"Logout\":\r\n        return  {check: true}\r\n\r\n        case \"Finish Checking\":\r\n            return {\r\n                ...state,\r\n                check:false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState={\r\n    events:[],\r\n    activeEvent:null\r\n}\r\n\r\nexport const EventReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"Add New Event\":\r\n            return({\r\n                ...state,\r\n                events:[\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            });\r\n        case \"Events Loading\":\r\n            return({\r\n                ...state,\r\n                events:[\r\n                    ...action.payload\r\n                ]\r\n            });\r\n        case \"Update Event\":\r\n            return({\r\n                ...state,\r\n                events: state.events.map(eve => (eve._id === action.payload.id)?action.payload:eve)\r\n            });\r\n        case \"Delete Event\":\r\n            return({\r\n                ...state,\r\n                events: state.events.filter(eve => (eve._id !== action.payload._id))\r\n            });\r\n        case \"Set Active Event\":\r\n            return({\r\n                ...state,\r\n                activeEvent: action.payload,\r\n            });\r\n\r\n        case \"Clean Active Event\":\r\n        return({\r\n            ...state,\r\n            activeEvent:null,\r\n        });\r\n        \r\n        case \"Logout Clean\":\r\n        return(initialState);    \r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","const initialState={\r\n    openModal: false\r\n}\r\n\r\nexport const ModalReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"openModal\":\r\n            return({\r\n                ...state,\r\n                openModal: true,\r\n            });\r\n            \r\n            case \"closeModal\":\r\n                return({\r\n                    ...state,\r\n                    openModal: false,\r\n                });\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport { AuthReducer } from \"./Reducers/AuthReducer\";\r\nimport { EventReducer } from \"./Reducers/EventReducer\";\r\nimport { ModalReducer } from \"./Reducers/ModalReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  modal: ModalReducer,\r\n  calendar: EventReducer,\r\n  auth: AuthReducer,\r\n});\r\n\r\nconst composeEnhancers = composeWithDevTools({});\r\n\r\nexport const store = createStore(\r\n  reducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { AppRouter } from './routers/AppRouter';\r\nimport { store } from './Store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={ store }>\r\n                <AppRouter />\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.scss\";\nimport { CalendarApp } from \"./CalendarApp\";\n\n\nReactDOM.render(\n  <CalendarApp />, \ndocument.getElementById(\"root\"));\n"],"sourceRoot":""}